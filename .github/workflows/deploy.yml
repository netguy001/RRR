name: Deploy Flask App to EC2

on:
  push:
    branches:
      - main
      - dev   # optional: add more branches if needed

jobs:
  build-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      # Log in to Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: mega001
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Build image with both commit SHA + latest
      - name: Build image
        run: |
          IMAGE_TAG=${{ github.sha }}
          echo "Building image with tags: $IMAGE_TAG and latest"
          docker build --no-cache -t mega001/flaskapp:$IMAGE_TAG -t mega001/flaskapp:latest .

      # Push both tags
      - name: Push image
        run: |
          IMAGE_TAG=${{ github.sha }}
          echo "Pushing image with tags: $IMAGE_TAG and latest"
          docker push mega001/flaskapp:$IMAGE_TAG
          docker push mega001/flaskapp:latest

      # Deploy to EC2
      - name: Deploy to EC2
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.EC2_SSH_KEY }}" > ~/.ssh/ec2_key
          chmod 600 ~/.ssh/ec2_key
          ssh-keyscan -H ${{ secrets.EC2_HOST }} >> ~/.ssh/known_hosts

          ssh -o StrictHostKeyChecking=no -i ~/.ssh/ec2_key ec2-user@${{ secrets.EC2_HOST }} "
            set -e
            echo 'Starting deployment...'

            # Login to Docker Hub
            echo '${{ secrets.DOCKER_PASSWORD }}' | docker login -u mega001 --password-stdin

            # Stop and remove old container
            docker stop flaskapp 2>/dev/null || true
            docker rm flaskapp 2>/dev/null || true

            # Remove old images (optional cleanup)
            docker image prune -af || true

            # Pull latest image
            docker pull mega001/flaskapp:latest

            # Run container
            docker run -d \
              --name flaskapp \
              -p 8080:5003 \
              -e FLASK_SECRET_KEY='${{ secrets.FLASK_SECRET_KEY }}' \
              -v /home/ec2-user/data:/app/data \
              -v /home/ec2-user/uploads:/app/static/uploads \
              --restart unless-stopped \
              mega001/flaskapp:latest

            echo 'Container status:'
            docker ps | grep flaskapp || (echo 'ERROR: Container not running' && exit 1)
          "

          rm -f ~/.ssh/ec2_key
