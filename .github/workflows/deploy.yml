name: Deploy Flask App to EC2

on:
  push:
    branches:
      - main

jobs:
  build-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      # Build & push Docker image
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: mega001
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build image
        run: docker build -t mega001/flaskapp:latest .

      - name: Push image
        run: docker push mega001/flaskapp:latest

      # Deploy using SSH action (more reliable)
      - name: Deploy to EC2
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ec2-user
          key: ${{ secrets.EC2_SSH_KEY }}
          port: 22
          timeout: 60s
          command_timeout: 10m
          script: |
            echo "Starting deployment as $(whoami)..."
            
            # Install Docker if not present
            if ! command -v docker &> /dev/null; then
                echo "Installing Docker..."
                sudo yum update -y
                sudo yum install -y docker
                sudo systemctl start docker
                sudo systemctl enable docker
                sudo usermod -a -G docker ec2-user
            fi
            
            # Start Docker service if not running
            if ! sudo systemctl is-active --quiet docker; then
                echo "Starting Docker service..."
                sudo systemctl start docker
            fi
            
            # Create directories
            mkdir -p /home/ec2-user/data /home/ec2-user/uploads
            echo "Directories created"
            
            # Pull latest image
            echo "Pulling Docker image..."
            sudo docker pull mega001/flaskapp:latest
            echo "Image pulled successfully"
            
            # Stop existing container
            echo "Stopping existing container..."
            sudo docker stop flaskapp 2>/dev/null || echo "No existing container to stop"
            sudo docker rm flaskapp 2>/dev/null || echo "No existing container to remove"
            
            # Run new container
            echo "Starting new container..."
            sudo docker run -d \
              --name flaskapp \
              -p 8080:5003 \
              -e FLASK_SECRET_KEY="${{ secrets.FLASK_SECRET_KEY }}" \
              -v /home/ec2-user/data:/app/data \
              -v /home/ec2-user/uploads:/app/static/uploads \
              --restart unless-stopped \
              mega001/flaskapp:latest
            
            # Wait and verify
            echo "Waiting for container to start..."
            sleep 15
            
            if sudo docker ps | grep flaskapp; then
              echo "SUCCESS: Container is running!"
              echo "Flask app is accessible on port 8080"
              echo "Container logs:"
              sudo docker logs flaskapp --tail 10
            else
              echo "ERROR: Container failed to start"
              sudo docker logs flaskapp 2>/dev/null || echo "No logs available"
              exit 1
            fi